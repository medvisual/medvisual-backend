name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  check-for-changes:
    name: Check for changes in each service
    runs-on: ubuntu-latest
    outputs:
      api_gateway_changed: ${{ steps.api_gateway.outputs.service }}
      image_handler_changed: ${{ steps.image_handler.outputs.service }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes in api-gateway
        id: api_gateway
        uses: dorny/paths-filter@v3
        with:
          filters: |
            service:
              - 'apps/api-gateway/**'

      - name: Check for changes in image-handler
        id: image_handler
        uses: dorny/paths-filter@v3
        with:
          filters: |
            service:
              - 'apps/image-handler/**'

  deploy-api-gateway:
    name: api-gateway -> CI/CD (if changed)
    runs-on: ubuntu-latest
    needs: check-for-changes
    if: needs.check-for-changes.outputs.api_gateway_changed == 'true'

    # TODO: Make deploy steps reusable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Copy libs folder and corresponding configs so that they are included in the deployment
      - name: Bundle
        run: |
            cp -r libs apps/api-gateway/libs
            cp deploy/api-gateway/configs/* apps/api-gateway

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"

      - name: Install packages
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: "medvisual-api-gateway"
          appdir: "apps/api-gateway"
          
  deploy-image-handler:
    name: image-handler -> CI/CD (if changed)
    runs-on: ubuntu-latest
    needs: check-for-changes
    if: needs.check-for-changes.outputs.image_handler_changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Copy libs folder and corresponding configs so that they are included in the deployment
      - name: Bundle
        run: |
            cp -r libs apps/image-handler/libs
            cp deploy/image-handler/configs/* apps/image-handler

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
      
      - name: Install packages
        run: npm ci

      - name: Run linter
        run: npm run lint
        
      - name: Build
        run: npm run build

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: "medvisual-image-handler"
          appdir: "apps/image-handler"