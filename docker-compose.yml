services:
  postgres:
    image: postgres:17.0-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U $$POSTGRES_USER"]
      interval: 2s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # adminer:
  #   image: adminer
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - rmq_data:/var/lib/rabbitmq

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    command: npm run start:dev api-gateway
    env_file:
      - ./apps/api-gateway/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      image-handler:
        condition: service_started
      diseases:
        condition: service_started
      users:
        condition: service_started
      auth:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
      
  image-handler:
    build:
      context: .
      dockerfile: ./apps/image-handler/Dockerfile
      target: development
    command: npm run start:dev image-handler
    env_file:
      - ./apps/image-handler/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3001:3001"

  diseases:
    build:
      context: .
      dockerfile: ./apps/diseases/Dockerfile
      target: development
    command: npm run start:dev diseases
    env_file:
      - ./apps/diseases/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3002:3002"

  users:
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: npm run start:dev users
    env_file:
      - ./apps/users/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3003:3003"

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      users:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3004:3004"

volumes:
  pg_data:
  rmq_data: